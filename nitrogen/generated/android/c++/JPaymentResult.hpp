///
/// JPaymentResult.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PaymentResult.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::hfportmone {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PaymentResult" and the the Kotlin data class "PaymentResult".
   */
  struct JPaymentResult final: public jni::JavaClass<JPaymentResult> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/hfportmone/PaymentResult;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PaymentResult by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PaymentResult toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldBillId = clazz->getField<jni::JString>("billId");
      jni::local_ref<jni::JString> billId = this->getFieldValue(fieldBillId);
      static const auto fieldStatus = clazz->getField<jni::JString>("status");
      jni::local_ref<jni::JString> status = this->getFieldValue(fieldStatus);
      static const auto fieldBillAmount = clazz->getField<double>("billAmount");
      double billAmount = this->getFieldValue(fieldBillAmount);
      static const auto fieldCardMask = clazz->getField<jni::JString>("cardMask");
      jni::local_ref<jni::JString> cardMask = this->getFieldValue(fieldCardMask);
      static const auto fieldCommissionAmount = clazz->getField<double>("commissionAmount");
      double commissionAmount = this->getFieldValue(fieldCommissionAmount);
      static const auto fieldReceiptUrl = clazz->getField<jni::JString>("receiptUrl");
      jni::local_ref<jni::JString> receiptUrl = this->getFieldValue(fieldReceiptUrl);
      static const auto fieldContractNumber = clazz->getField<jni::JString>("contractNumber");
      jni::local_ref<jni::JString> contractNumber = this->getFieldValue(fieldContractNumber);
      static const auto fieldPayDate = clazz->getField<jni::JDouble>("payDate");
      jni::local_ref<jni::JDouble> payDate = this->getFieldValue(fieldPayDate);
      static const auto fieldPayeeName = clazz->getField<jni::JString>("payeeName");
      jni::local_ref<jni::JString> payeeName = this->getFieldValue(fieldPayeeName);
      static const auto fieldToken = clazz->getField<jni::JString>("token");
      jni::local_ref<jni::JString> token = this->getFieldValue(fieldToken);
      return PaymentResult(
        billId != nullptr ? std::make_optional(billId->toStdString()) : std::nullopt,
        status->toStdString(),
        billAmount,
        cardMask != nullptr ? std::make_optional(cardMask->toStdString()) : std::nullopt,
        commissionAmount,
        receiptUrl != nullptr ? std::make_optional(receiptUrl->toStdString()) : std::nullopt,
        contractNumber != nullptr ? std::make_optional(contractNumber->toStdString()) : std::nullopt,
        payDate != nullptr ? std::make_optional(payDate->value()) : std::nullopt,
        payeeName != nullptr ? std::make_optional(payeeName->toStdString()) : std::nullopt,
        token != nullptr ? std::make_optional(token->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPaymentResult::javaobject> fromCpp(const PaymentResult& value) {
      return newInstance(
        value.billId.has_value() ? jni::make_jstring(value.billId.value()) : nullptr,
        jni::make_jstring(value.status),
        value.billAmount,
        value.cardMask.has_value() ? jni::make_jstring(value.cardMask.value()) : nullptr,
        value.commissionAmount,
        value.receiptUrl.has_value() ? jni::make_jstring(value.receiptUrl.value()) : nullptr,
        value.contractNumber.has_value() ? jni::make_jstring(value.contractNumber.value()) : nullptr,
        value.payDate.has_value() ? jni::JDouble::valueOf(value.payDate.value()) : nullptr,
        value.payeeName.has_value() ? jni::make_jstring(value.payeeName.value()) : nullptr,
        value.token.has_value() ? jni::make_jstring(value.token.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::hfportmone
