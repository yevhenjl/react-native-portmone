///
/// JPreauthParams.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PreauthParams.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::hfportmone {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PreauthParams" and the the Kotlin data class "PreauthParams".
   */
  struct JPreauthParams final: public jni::JavaClass<JPreauthParams> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/hfportmone/PreauthParams;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PreauthParams by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PreauthParams toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldPayeeId = clazz->getField<jni::JString>("payeeId");
      jni::local_ref<jni::JString> payeeId = this->getFieldValue(fieldPayeeId);
      static const auto fieldAccountId = clazz->getField<jni::JString>("accountId");
      jni::local_ref<jni::JString> accountId = this->getFieldValue(fieldAccountId);
      static const auto fieldDescription = clazz->getField<jni::JString>("description");
      jni::local_ref<jni::JString> description = this->getFieldValue(fieldDescription);
      static const auto fieldBillNumber = clazz->getField<jni::JString>("billNumber");
      jni::local_ref<jni::JString> billNumber = this->getFieldValue(fieldBillNumber);
      return PreauthParams(
        payeeId->toStdString(),
        accountId != nullptr ? std::make_optional(accountId->toStdString()) : std::nullopt,
        description->toStdString(),
        billNumber != nullptr ? std::make_optional(billNumber->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPreauthParams::javaobject> fromCpp(const PreauthParams& value) {
      return newInstance(
        jni::make_jstring(value.payeeId),
        value.accountId.has_value() ? jni::make_jstring(value.accountId.value()) : nullptr,
        jni::make_jstring(value.description),
        value.billNumber.has_value() ? jni::make_jstring(value.billNumber.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::hfportmone
